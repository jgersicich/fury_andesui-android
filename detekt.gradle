DETEKT_PACKAGE_NAME = 'io.gitlab.arturbosch.detekt'
DETEKT_MODULE_NAME = 'detekt-formatting'
DETEKT_LINT_TASK_NAME = 'detekt'
DETEKT_CONFIG_TASK_NAME = 'detektGenerateConfig'
DETEKT_CONFIG_FILE_NAME = 'detekt.yml'
DETEKT_CONFIG_FILE_PATH = 'config/detekt/'
DETEKT_CUSTOM_CONFIG_FILE_PATH = './'
DETEKT_REPORT_HTML_FILE_PATH = 'build/reports/detekt_report.html'
DETEKT_REPORT_XML_FILE_PATH = 'build/reports/detekt_report.xml'
KOTLIN_FILES_REGEX = '.'


apply plugin: DETEKT_PACKAGE_NAME

dependencies {
    detektPlugins DETEKT_PACKAGE_NAME + ":" + DETEKT_MODULE_NAME + ":" + DETEKT_VERSION
}

detekt {
    input = project.rootProject.files(KOTLIN_FILES_REGEX)
    config = project.rootProject.files(DETEKT_CUSTOM_CONFIG_FILE_PATH + DETEKT_CONFIG_FILE_NAME)

    // Enabling XML and HTML reports
    reports {
        xml {
            enabled = true
            destination = file(DETEKT_REPORT_XML_FILE_PATH)
        }
        html {
            enabled = true
            destination = file(DETEKT_REPORT_HTML_FILE_PATH)
        }
    }
}

tasks.getByName(DETEKT_CONFIG_TASK_NAME).doLast {
    def file = project.rootProject.file(DETEKT_CUSTOM_CONFIG_FILE_PATH + DETEKT_CONFIG_FILE_NAME)
    if (!file.exists()) {
        project.rootProject.ant.move file: project.rootProject.file(DETEKT_CONFIG_FILE_PATH + DETEKT_CONFIG_FILE_NAME).toString(),
                todir: project.rootProject.file(DETEKT_CUSTOM_CONFIG_FILE_PATH).toString()
    }
}

tasks.getByName(DETEKT_LINT_TASK_NAME).dependsOn DETEKT_CONFIG_TASK_NAME
